- name: Fact | Naemon Packages
  set_fact:
    oitc_package_list:
      - openitcockpit-common
      - openitcockpit-naemon
      - openitcockpit-statusengine-naemon
      - openitcockpit-message
      - openitcockpit-monitoring-plugins
  when: openitcockpit_core == 'naemon'

- name: Fact | Nagios Packages
  set_fact:
    oitc_package_list:
      - openitcockpit-common
      - openitcockpit-nagios
      - openitcockpit-ndoutils
      - openitcockpit-message
      - openitcockpit-monitoring-plugins
  when: openitcockpit_core == 'nagios'

- name: MySQL
  include_role: name=mysql

- name: Fact | create database
  set_fact: "{{item.key}}={{item.value}}"
  with_items:
    - key: "createdb_dbs"
      value: "mysql"
    - key: "createdb_config"
      value: "/root/.openitcockpit.my.cnf"
    - key: "createdb_user"
      value: "openitcockpit"
    - key: "createdb_host"
      value: "localhost"
    - key: "createdb_database"
      value: "openitcockpit"

- name: create database
  include_role: name=createdb

- name: Get mysql root password
  mysql_password_ini: path=/root/.my.cnf user=root generate_password=False
  register: mysql_root_data

- name: Set debconf
  debconf: name=openitcockpit-mysql question={{item.question}} value={{item.value}} vtype={{item.vtype}}
  with_items:
    - question: openitcockpit/mysql/app-pass
      value: "{{createdb_password}}"
      vtype: password
    - question: openitcockpit/app-password-confirm
      value: "{{createdb_password}}"
      vtype: password
    - question: openitcockpit/db/app-user
      value: "{{createdb_user}}"
      vtype: string
    - question: openitcockpit/db/dbname
      value: "{{createdb_database}}"
      vtype: string
    - question: openitcockpit/dbconfig-install
      value: "true"
      vtype: boolean
    - question: openitcockpit/dbconfig-upgrade
      value: "true"
      vtype: boolean
    - question: openitcockpit/upgrade-backup
      value: "true"
      vtype: boolean
    - question: openitcockpit/mysql/admin-pass
      value: "{{mysql_root_data.password}}"
      vtype: password
    - question: openitcockpit/password-confirm
      value: "{{mysql_root_data.password}}"
      vtype: password
    - question: openitcockpit/mysql/admin-user
      value: "{{mysql_root_data.user}}"
      vtype: string
    - question: openitcockpit/mysql/method
      value: unix socket
      vtype: select
    - question: openitcockpit/database-type
      value: "{{createdb_dbs}}"
      vtype: string
  register: debconf_state
  changed_when: "debconf_state|changed and debconf_state['previous'][item.question] != '(password omitted)'"

- name: Installation
  apt:
    name: "{{ item }}"
  with_items: "{{ oitc_package_list }}"

- name: Install ansible dependencies
  apt:
    name: "{{ item }}"
  with_items:
    - python-sqlalchemy
    - python-mysqldb
    - expect

- include_tasks: repo.yml

- name: Create .ssh directory
  file:
    path: /var/lib/nagios/.ssh
    owner: nagios
    group: nagios
    mode: "0755"
    state: directory

- name: Generate SSH Key
  user:
    name: nagios
    generate_ssh_key: yes

- name: phpNSTA
  apt:
    name: "{{ item }}"
  with_items:
    - phpnsta-master
    - openitcockpit-module-distribute
  when: openitcockpit_instance == 'master'

- name: Install autoreport module
  apt:
    name: openitcockpit-module-autoreport
  when: openitcockpit_module_autoreport

- name: Install evc module
  apt:
    name: openitcockpit-module-evc
  when: openitcockpit_module_evc

- name: Install idoit module
  apt:
    name: openitcockpit-module-idoit
  when: openitcockpit_module_idoit

- name: Install map module
  apt:
    name: openitcockpit-module-map
  when: openitcockpit_module_map

- name: Install massenversand module
  apt:
    name: openitcockpit-module-massenversand-de
  when: openitcockpit_module_massenversand

- name: Install check_mk module
  apt:
    name: openitcockpit-module-mk
  when: openitcockpit_module_mk

- name: Install sap module
  apt:
    name: openitcockpit-module-sap
  when: openitcockpit_module_sap

- name: Install nrpe module
  apt:
    name: nagios-nrpe-plugin
  when: openitcockpit_module_nrpe

- name: Install design module
  apt:
    name: openitcockpit-module-design
  when: openitcockpit_module_design

- name: Create symlink for nrpe module
  file:
    path: /opt/openitc/nagios/libexec/check_nrpe
    state: link
    src: /usr/lib/nagios/plugins/check_nrpe
  when: openitcockpit_module_nrpe

- name: Install alfresco module
  apt:
    name: openitcockpit-module-alfresco
  when: openitcockpit_module_alfresco

- name: Install linux basic monitoring module
  apt:
    name: openitcockpit-module-linux-basic-monitoring
  when: openitcockpit_module_linux_basic_monitoring

- name: Install nwc module
  apt:
    name: openitcockpit-module-nwc
  when: openitcockpit_module_nwc

- name: Install postgres module
  apt:
    name: openitcockpit-module-postgres
  when: openitcockpit_module_postgres

- name: Install wmi module
  apt:
    name: openitcockpit-module-wmi
  when: openitcockpit_module_wmi

- name: Install grafana
  apt:
    name: openitcockpit-module-grafana
  when: openitcockpit_module_grafana

- name: Install pagerduty
  apt:
    name: openitcockpit-module-pagerduty
  when: openitcockpit_module_pagerduty

- name: check if user exists
  sqledit:
    state: select
    url: mysql+mysqldb://localhost/openitcockpit?read_default_file=/etc/openitcockpit/mysql.cnf
    table: users
    keys:
      - id
    columns:
      - name: id
        type: Integer
  register: user_result

- block:
    - name: Copy SETUP.sh expect script
      template:
        src: setupsh_expect.j2
        dest: /usr/share/openitcockpit/app/SETUP_EXPECT
        owner: root
        mode: "0750"
        group: root
    - block:
        - name: Run SETUP.sh script
          command: /usr/share/openitcockpit/app/SETUP_EXPECT
      always:
        - name: Remove SETUP.sh expect script
          file:
            path: /usr/share/openitcockpit/app/SETUP_EXPECT
            state: absent
  when: user_result.rows|length == 0 and openitcockpit_user_password is defined

- fail:
    msg: Please set openitcockpit_user_password to run SETUP.sh through ansible or run SETUP.sh (now) manually
  when: user_result.rows|length == 0 and (not openitcockpit_user_password is defined)
