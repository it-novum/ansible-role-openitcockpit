- name: Check for required variables
  fail:
    msg: Please set openitcockpit_user_password to run SETUP.sh through ansible or run SETUP.sh (now) manually
  when: install_mode == 'install' and (not openitcockpit_user_password is defined)

- name: Fact | Naemon Packages
  set_fact:
    oitc_package_list:
      - openitcockpit
      - openitcockpit-module-grafana
      - phpmyadmin
  when: openitcockpit_core == 'naemon'

- name: Fact | Nagios Packages
  set_fact:
    oitc_package_list:
      - openitcockpit
      - openitcockpit-nagios
      - openitcockpit-module-grafana
      - phpmyadmin
  when: openitcockpit_core == 'nagios'

- name: Install distribute module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-distribute'] }}"
  when: openitcockpit_instance == 'master'

- name: Install autoreport module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-autoreport'] }}"
  when: openitcockpit_module_autoreport|bool

- name: Install evc module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-evc'] }}"
  when: openitcockpit_module_evc|bool

- name: Install map module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-map'] }}"
  when: openitcockpit_module_map|bool

- name: Install check_mk module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-checkmk'] }}"
  when: openitcockpit_module_mk|bool

- name: Install sap module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-sap'] }}"
  when: openitcockpit_module_sap|bool

- name: Install nrpe module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['nagios-nrpe-plugin'] }}"
  when: openitcockpit_module_nrpe|bool

- name: Install design module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-design'] }}"
  when: openitcockpit_module_design|bool


- name: Install alfresco module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-alfresco'] }}"
  when: openitcockpit_module_alfresco|bool

- name: Install linux basic monitoring module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-linux-basic-monitoring'] }}"
  when: openitcockpit_module_linux_basic_monitoring|bool

- name: Install nwc module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-nwc'] }}"
  when: openitcockpit_module_nwc|bool

- name: Install postgres module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-postgres'] }}"
  when: openitcockpit_module_postgres|bool

- name: Install wmi module
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-wmi'] }}"
  when: openitcockpit_module_wmi|bool

- name: Install pagerduty
  set_fact:
    oitc_package_list: "{{ oitc_package_list + ['openitcockpit-module-pagerduty'] }}"
  when: openitcockpit_module_pagerduty|bool

- name: MySQL
  include_role:
    name: mysql

- name: createdb
  include_tasks: db.yml

- name: Installation
  apt:
    name: "{{ oitc_package_list }}"

- name: Create symlink for nrpe module
  file:
    path: /opt/openitc/nagios/libexec/check_nrpe
    state: link
    src: /usr/lib/nagios/plugins/check_nrpe
  when: openitcockpit_module_nrpe|bool

- name: Create .ssh directory
  file:
    path: /var/lib/nagios/.ssh
    owner: nagios
    group: nagios
    mode: "0755"
    state: directory

- name: Copy ssh key
  copy:
    dest: /var/lib/nagios/.ssh/id_rsa
    content: "{{ lookup('file', openitcockpit_ssh_key) }}"
    mode: "0600"
    owner: "nagios"
    group: "nagios"
  when: openitcockpit_ssh_key is defined

- name: Copy ssh pubkey
  copy:
    dest: /var/lib/nagios/.ssh/id_rsa.pub
    content: "{{ lookup('file', openitcockpit_ssh_pubkey) }}"
    mode: "0600"
    owner: "nagios"
    group: "nagios"
  when: openitcockpit_ssh_pubkey is defined

- block:
  - name: check if user exists
    sqledit:
      state: select
      url: "mysql://{{createdb_host}}/{{createdb_database}}?read_default_file=/opt/openitc/etc/mysql/mysql.cnf"
      table: users
      keys:
        - id
      columns:
        - name: id
          type: Integer
    ignore_errors: yes
    register: user_result

  - block:
    - name: Create /opt/openitc/ansible/
      file:
        path: /opt/openitc/ansible/
        state: directory
    - name: Copy SETUP.sh configuration
      template:
        src: ansible_settings.yml
        dest: /opt/openitc/ansible/ansible_settings.yml
        owner: root
        mode: "0750"
        group: root
    - block:
        - name: Run SETUP.sh script
          command: /opt/openitc/frontend/SETUP.sh
      always:
        - name: Remove SETUP.sh configuration
          file:
            path: /opt/openitc/ansible/ansible_settings.yml
            state: absent
    when: user_result.failed or user_result.rows|length == 0

  - name: Check license key
    sqledit:
      url: "mysql://{{createdb_host}}/{{createdb_database}}?read_default_file=/opt/openitc/etc/mysql/mysql.cnf"
      state: select
      table: registers
      keys:
        - id
      columns:
        - name: id
          type: Integer
          value: 1
        - name: license
          type: String
          value: "{{ openitcockpit_license }}"
    register: current_license

  - name: Set license key
    sqledit:
      url: "mysql://{{createdb_host}}/{{createdb_database}}?read_default_file=/opt/openitc/etc/mysql/mysql.cnf"
      table: registers
      keys:
        - id
      columns:
        - name: id
          type: Integer
          value: 1
        - name: license
          type: String
          value: "{{ openitcockpit_license }}"
        - name: accepted
          type: Integer
          value: 0
        - name: apt
          type: Integer
          value: 1
        - name: created
          type: DateTime
          value: "now"
        - name: modified
          type: DateTime
          value: "now"
    when: current_license.rows|length == 0
  when: install_mode == 'install'
